<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.bakery.user.mapper.UserMapper">
 	<select id="isDuplicatedId" parameterType="String">
 		SELECT count(1)
 		FROM `user`
 		WHERE 
 			`loginId` = #{loginId}
 	</select>
 	
 	<insert id="insertUser" parameterType="map">
 		INSERT INTO `user`
 		(
	 		`loginId`
			,`password`
			,`name`
			,`email`
			,`phoneNumber`
			,`postCode`
			,`address`
			,`createdAt`
			,`updatedAt`
 		)
 		VALUES
 		(
 			#{loginId}
 			,#{password}
 			,#{name}
 			,#{email}
 			,#{phoneNumber}
 			,#{postCode}
 			,#{address}
 			,NOW()
 			,NOW()
 		)
 	</insert>
 	
 	<select id="selectUserList" resultType="com.bakery.user.domain.User">
 		SELECT 
 			`id`
 			,`loginId`
			,`name`
			,`email`
			,`phoneNumber`
			,`postCode`
			,`address`
			,`createdAt`
		FROM
			`user`
 	</select>
 	
 	
 	<select id="selectUserByName" resultType="com.bakery.user.domain.User" parameterType="String">
 		SELECT 
 			`id`
 			,`loginId`
			,`name`
			,`email`
			,`phoneNumber`
			,`postCode`
			,`address`
			,`createdAt`
		FROM
			`user`
		WHERE
		<![CDATA[
		`name` like CONCAT('%',#{name},'%')
        ]]>
 	</select>
 	
 	<select id="selectUserByLoginIdPassword" resultType="com.bakery.user.domain.User" parameterType="map">
 		SELECT
 			*
 		FROM `user`
 		WHERE
 			`loginId` = #{loginId}
 			AND
 			`password` = #{password}
 	</select>
 	
 	<select id="selectUserByEmailName" resultType="com.bakery.user.domain.User" parameterType="map">
 		SELECT
 			*
 		FROM `user`
 		WHERE
 			`email` = #{email}
 			AND
 			`name` = #{name}
 	</select>
 	
 	<update id="updatePassword" parameterType="Map">
 		UPDATE `user`
 		SET	`password` = #{password}
 		WHERE
 			`id` = #{userId}
 		
 		
 	</update>
 	
 	<select id="selectByUserId" parameterType="int" resultType="com.bakery.user.domain.User">
 		SELECT
 			*
 		FROM `user`
 		WHERE
 			`id` = #{userId}

 	</select>
 	
 	<update id="updateUser" parameterType="map">
 		UPDATE `user`
 		SET	
 			`email` = #{upEmail}
 			,`phoneNumber` = #{upNumber}
 			,`address` = #{upAddress}
 		WHERE
 			`id` = #{userId}
 	</update>
 	
 	<delete id="deleteUserByUserId" parameterType="int">
 		DELETE FROM `user`
 		WHERE
 			`id` = #{userId}
 	</delete>
 </mapper>